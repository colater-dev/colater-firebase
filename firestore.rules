/**
 * @fileoverview Firestore Security Rules for the Brand Tagline Generator application.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model. Each user has a dedicated data tree under `/users/{userId}`, and only the authenticated user can read and write to their own data.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information.
 * - /users/{userId}/brands/{brandId}: Stores brands created by users.
 * - /users/{userId}/brands/{brandId}/inputVersions/{versionId}: Stores the history of changes for brand inputs.
 * - /users/{userId}/brands/{brandId}/taglineGenerations/{generationId}: Stores AI-generated taglines for a brand.
 *
 * Key Security Decisions:
 * - User listing is disallowed to prevent unauthorized access to user profiles.
 * - All data is nested under /users/{userId} to enforce a clear ownership hierarchy.
 * - Data validation is relaxed in this prototyping phase to allow for rapid iteration but crucial authorization and relational fields are validated.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Disallow listing all users.  Enforce user-based access control.
    match /users/{userId} {
      allow list: if false;

      // Only allow authenticated user to read/write their own user document.
      allow read, write: if request.auth != null && request.auth.uid == userId;

      match /brands/{brandId} {
        // Only allow authenticated user to read/write their own brand documents.
        allow read, write: if request.auth != null && request.auth.uid == userId;

        match /inputVersions/{versionId} {
          // Only allow authenticated user to read/write their own input version documents.
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }

        match /taglineGenerations/{generationId} {
          // Only allow authenticated user to read/write their own tagline generation documents.
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }
    }
  }
}